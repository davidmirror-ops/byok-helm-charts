apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "union-operator.fullname" . }}
  labels:
    {{- include "union-operator.labels" . | nindent 4 }}
data:
  config.yaml: |
    union:
      connection:
        host: {{ tpl (include "union-operator.grpcUrl" . | toString) $ }}
      auth:
        type: ClientSecret
        clientId: {{ tpl (.Values.union.appId | toString) $ }}
        clientSecretLocation: /etc/union/secret/app_secret
        authorizationMetadataKey: "flyte-authorization"
        tokenRefreshWindow: 5m
    authorizer:
      type: noop
    operator:
     {{- if .Values.union.enableAppService }}
      apps:
        enabled: true
     {{- end }}
      syncClusterConfig:
        enabled: {{ tpl (.Values.union.syncClusterConfig.enabled | toString) $ }}
      enabled: {{ tpl (.Values.union.enabled | toString) $ }}
      enableTunnelService: {{ tpl (.Values.union.enableTunnelService | toString) $ }}
      clusterId:
        organization: {{ include "union-operator.org" . }}
      dependenciesHeartbeat:
        propeller:
          endpoint: http://flytepropeller.{{ include "union-operator.namespace" . }}.svc.cluster.local:{{ print (index .Values.union.configmap.core.propeller "prof-port") }}
          {{- if .Values.union.unionoperatorDependencies }}
          {{- if .Values.union.unionoperatorDependencies.timeout }}
          timeout: {{ tpl (.Values.union.unionoperatorDependencies.timeout | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.interval }}
          interval: {{ tpl (.Values.union.unionoperatorDependencies.interval | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.unhealthyThreshold }}
          unhealthyThreshold: {{ tpl (.Values.union.unionoperatorDependencies.unhealthyThreshold | toString) $ }}
          {{- end }}
          {{- end }}
        proxy:
          endpoint: http://union-operator-proxy.{{ include "union-operator.namespace" . }}.svc.cluster.local:{{ print (index .Values.union.proxy "prof-port") }}
          {{- if .Values.union.unionoperatorDependencies }}
          {{- if .Values.union.unionoperatorDependencies.timeout }}
          timeout: {{ tpl (.Values.union.unionoperatorDependencies.timeout | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.interval }}
          interval: {{ tpl (.Values.union.unionoperatorDependencies.interval | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.unhealthyThreshold }}
          unhealthyThreshold: {{ tpl (.Values.union.unionoperatorDependencies.unhealthyThreshold | toString) $ }}
          {{- end }}
          {{- end }}
{{- if and .Values.union.unionoperatorSparkHistoryServer.enabled .Values.union.unionoperatorSparkHistoryServer.dependencyCheckEnabled}}
        spark-hs:
          endpoint: http://union-operator-spark-hs.{{ include "union-operator.namespace" . }}.svc.cluster.local:{{ print (index .Values.union.proxy "prof-port") }}
          {{- if .Values.union.unionoperatorDependencies }}
          {{- if .Values.union.unionoperatorDependencies.timeout }}
          timeout: {{ tpl (.Values.union.unionoperatorDependencies.timeout | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.interval }}
          interval: {{ tpl (.Values.union.unionoperatorDependencies.interval | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.unhealthyThreshold }}
          unhealthyThreshold: {{ tpl (.Values.union.unionoperatorDependencies.unhealthyThreshold | toString) $ }}
          {{- end }}
          {{- end }}
{{- end }}
{{- if .Values.union.unionoperatorMonitoring.enabled }}
        prometheus:
          endpoint: http://{{ include "union-operator.fullname" . }}-prometheus.{{ include "union-operator.namespace" . }}.svc.cluster.local:{{ printf "%d/prometheus/-/healthy" (int (index .Values.union.unionoperatorMonitoring.prometheus.service "port")) }}
          {{- if .Values.union.unionoperatorDependencies }}
          {{- if .Values.union.unionoperatorDependencies.timeout }}
          timeout: {{ tpl (.Values.union.unionoperatorDependencies.timeout | toString) $ }}
          {{- end }}
          {{- if .Values.union.unionoperatorDependencies.interval }}
          interval: {{ tpl (.Values.union.unionoperatorDependencies.interval | toString) $ }}
          {{- end }}
          {{- if  .Values.union.unionoperatorDependencies.unhealthyThreshold }}
          unhealthyThreshold: {{ tpl (.Values.union.unionoperatorDependencies.unhealthyThreshold | toString) $ }}
          {{- end }}
          {{- end }}
{{- end }}
      clusterData:
        appId: {{ tpl (.Values.union.appId | toString) $ }}
        cloudHostName: {{ tpl (include "union-operator.cloudHostName" . | toString) $ }}
        metadataBucketPrefix: {{ tpl (.Values.union.metadataBucketPrefix | toString) $ }}
        bucketName:  {{ tpl (include "union-operator.bucket" . | toString) $ }}
        bucketRegion: {{ tpl (include "union-operator.bucketRegion" . | toString) $ }}
        userRoleKey: {{ tpl (.Values.union.userRoleAnnotationKey | toString) $ }}
        userRole: {{ tpl (.Values.union.userRoleAnnotationValue | toString) $ }}
        storageType: {{ tpl (.Values.union.storage.type | toString) $ }}
        gcpProjectId: {{ tpl (include "union-operator.gcpProjectId" . | toString) $ }}
      collectUsages:
        enabled: {{ tpl (.Values.union.collectUsages.enabled | toString) $ }}
{{- if .Values.union.storage.customStorageConfig}}
        customStorageConfig: {{ tpl (.Values.union.storage.customStorageConfig | toString) $ }}
{{- end }}
      computeResourceManager:
        {{ tpl (.Values.union.computeResourceManager | toYaml) $ | nindent 8 }}
{{- if .Values.union.objectStore.enabled}}
    proxy:
      serverlessConfig:
        enabled: true
        objectStoreServiceEndpoint: 'dns:///union-operator-object-store.{{ include "union-operator.namespace" . }}.svc.cluster.local:{{ tpl (.Values.union.objectStore.service.grpcPort | toString) $ }}'
{{- end }}
  logger.yaml: |
    logger:
      level: 4
      show-source: true
{{- with .Values.union.unionoperator.configmapOverrides }}
  config-overrides.yaml: |
  {{- tpl (toYaml .) $ | nindent 4 }}
{{- end }}
  storage.yaml: | {{ tpl (include "union-storage" .) $ | nindent 4 }}
{{- if .Values.union.storage.fastRegistrationBucketName }}
  fast_registration_storage.yaml: | {{ tpl (include "union-fast-registration-storage" .) $ | nindent 4 }}
{{- end }}
