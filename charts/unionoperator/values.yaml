# Default values for union-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
union:
  # -- Mark cluster as healthy and ready to accept incoming workflows
  enabled: true
  # -- Enable the usage of tunnel service using cloudflare tunnels. This works only if the union services has this service enabled.
  enableTunnelService: false
  cloudUrl: "<Union Cloud URL>"
  appId: "<App Id from uctl create app>"
  appSecret: "<App Secret from uctl create app>"
  metadataBucketPrefix: s3://my-s3-bucket
  clusterName: ""
  # Something like 'iam.gke.io/gcp-service-account' for GCP or 'eks.amazonaws.com/role-arn' for AWS
  userRoleAnnotationKey: "foo"
  # Flyte user role with permissions to patch onto project service accounts e.g. arn:aws:iam::ACCOUNT_ID:role/flyte_project_role
  userRoleAnnotationValue: "bar"
  collectUsages:
    enabled: false
  #
  # STORAGE SETTINGS
  #

  storage:
    # -- Sets the storage type. Supported values are sandbox, s3, gcs and custom.
    type: sandbox
    bucketName: my-s3-bucket-prod
    # -- settings for storage type s3
    s3:
      region: us-east-1
    # -- settings for storage type gcs
    gcs:
    # -- GCP project ID. Required for storage type gcs.
    # projectId:
    # -- Settings for storage type custom. See https://github:com/graymeta/stow for supported storage providers/settings.
    custom: { }

  secrets:
    # set to false if you want to create this secret yourself, for example using the external-secrets-operator
    # see charts/unionoperator/templates/secret.yaml for the structure of the secret
    create: true
    adminOauthClientCredentials:
      clientSecret: '{{ tpl .Values.appSecret . }}'

  flyteadmin:
    enabled: false
  flytescheduler:
    enabled: false
  flyteconsole:
    enabled: false
  datacatalog:
    enabled: false
  #
  # FLYTEPROPELLER SETTINGS
  #

  flytepropeller:
    enabled: true
    # -- Replicas count for Flytepropeller deployment
    replicaCount: 1
    # -- Default resources requests and limits for Flytepropeller deployment
    resources:
      limits:
        cpu: "4"
        ephemeral-storage: 500Mi
        memory: "8Gi"
      requests:
        cpu: "2"
        ephemeral-storage: 100Mi
        memory: "3Gi"
    cacheSizeMbs: 0
    client_secret: foobar
    # -- Default regex string for searching configuration files
    configPath: /etc/flyte/config/*.yaml

    # -- Configuration for service accounts for FlytePropeller
    serviceAccount:
      # -- Should a service account be created for FlytePropeller
      create: true
      # -- Annotations for ServiceAccount attached to FlytePropeller pods
      annotations: { }
      # -- ImapgePullSecrets to automatically assign to the service account
      imagePullSecrets: []
    # -- Annotations for Flytepropeller pods
    podAnnotations: { }
    # -- nodeSelector for Flytepropeller deployment
    nodeSelector: { }
    # -- tolerations for Flytepropeller deployment
    tolerations: [ ]
    # -- affinity for Flytepropeller deployment
    affinity: { }
    clusterName: '
      {{- $previous := lookup "v1" "Secret" (.Release.Namespace) (printf "%v-cluster-name" (include "union-operator.fullname" .)) -}}
      {{- if (tpl .Values.clusterName .) -}}
      {{- (tpl .Values.clusterName .) -}}
      {{- else if $previous -}}
      {{- $previous.data.cluster_name | b64dec -}}
      {{- else -}}
      {{- $newName := include "newClusterName" . -}}
      {{- $newName -}}
      {{- end -}}'
    manager: true
  #
  #
  # CLUSTER RESOURCE MANAGER (SYNC) SETTINGS
  #

  cluster_resource_manager:
    enabled: true
    standalone_deploy: true
    service_account_name: clustersync-resource
    config:
      cluster_resources:
        standaloneDeployment: true
        customData:
          - production:
              - projectQuotaCpu:
                  value: "4096"
              - projectQuotaMemory:
                  value: "2Ti"
              - projectQuotaNvidiaGpu:
                  value: "256"
              - defaultUserRoleKey:
                  value: '{{ tpl .Values.userRoleAnnotationKey . }}'
              - defaultUserRoleValue:
                  value: '{{ tpl .Values.userRoleAnnotationValue . }}'
          - staging:
              - projectQuotaCpu:
                  value: "4096"
              - projectQuotaMemory:
                  value: "2Ti"
              - projectQuotaNvidiaGpu:
                  value: "256"
              - defaultUserRoleKey:
                  value: '{{ tpl .Values.userRoleAnnotationKey . }}'
              - defaultUserRoleValue:
                  value: '{{ tpl .Values.userRoleAnnotationValue . }}'
          - development:
              - projectQuotaCpu:
                  value: "4096"
              - projectQuotaMemory:
                  value: "2Ti"
              - projectQuotaNvidiaGpu:
                  value: "256"
              - defaultUserRoleKey:
                  value: '{{ tpl .Values.userRoleAnnotationKey . }}'
              - defaultUserRoleValue:
                  value: '{{ tpl .Values.userRoleAnnotationValue . }}'
    templates:
      # -- Template for namespaces resources
      - key: a_namespace.yaml
        value: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: {{ namespace }}
            labels:
              union.ai/namespace-type: flyte
          spec:
            finalizers:
            - kubernetes

      # -- Patch default service account
      - key: b_default_service_account.yaml
        value: |
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: default
            namespace: {{ namespace }}
            annotations:
              {{ defaultUserRoleKey }}: {{ defaultUserRoleValue }}

      - key: c_project_resource_quota.yaml
        value: |
          apiVersion: v1
          kind: ResourceQuota
          metadata:
            name: project-quota
            namespace: {{ namespace }}
          spec:
            hard:
              limits.cpu: {{ projectQuotaCpu }}
              limits.memory: {{ projectQuotaMemory }}
              requests.nvidia.com/gpu: {{ projectQuotaNvidiaGpu }}

  #
  # WEBHOOK SETTINGS
  #

  webhook:
    # -- enable or disable secrets webhook
    enabled: true
    # -- Configuration for service accounts for the webhook
    serviceAccount:
      # -- Should a service account be created for the webhook
      create: true
      # -- Annotations for ServiceAccount attached to the webhook
      annotations: { }
      # -- ImapgePullSecrets to automatically assign to the service account
      imagePullSecrets: []
    # -- Annotations for webhook pods
    podAnnotations: { }
    # -- Service settings for the webhook
    service:
      annotations:
        projectcontour.io/upstream-protocol.h2c: grpc
      type: ClusterIP

  # --------------------------------------------------------------------
  # Specializing your deployment using configuration
  # -------------------------------------------------------------------
  #
  # CONFIGMAPS SETTINGS
  #

  configmap:
    # -- Admin Client configuration [structure](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/nodes/subworkflow/launchplan#AdminConfig)
    admin:
      event:
        type: admin
        rate: 500
        capacity: 1000
      admin:
        endpoint: '{{- printf "dns:///%s" (.Values.cloudUrl | trimPrefix "dns:///" | trimPrefix "http://" | trimPrefix "https://") -}}'
        clientId: '{{ tpl .Values.appId . }}'
        clientSecretLocation: /etc/secrets/client_secret
        insecure: false
    # -- Catalog Client configuration [structure](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/nodes/task/catalog#Config)
    # Additional advanced Catalog configuration [here](https://pkg.go.dev/github.com/lyft/flyteplugins/go/tasks/pluginmachinery/catalog#Config)
    catalog:
      catalog-cache:
        endpoint: '{{- printf "dns:///%s" (.Values.cloudUrl | trimPrefix "dns:///" | trimPrefix "http://" | trimPrefix "https://") -}}'
        type: datacatalog
        insecure: false
        use-admin-auth: true

    # -- Core propeller configuration
    core:
      manager:
        shard:
          type: Hash     # use the "hash" shard strategy
          shard-count: 3 # the total number of shards
      # -- Propeller config specified [here](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/config).
      # These values are chosen to match a mix of [propeller config defaults](https://github.com/flyteorg/flytepropeller/blob/cbfcdf3396346bf83bd8e885d21803a5e53108ee/pkg/controller/config/config.go#L51-L114)
      # (many of which are overridden in the Chart's [values.yaml](https://github.com/flyteorg/flyte/blob/e6fa8120dc0be4c46e789270c89fcfef3f6289f9/charts/flyte-core/values.yaml#L671-L703)),
      # along with cloud-specific settings from [here](https://github.com/flyteorg/flyte/blob/e6fa8120dc0be4c46e789270c89fcfef3f6289f9/charts/flyte-core/values-eks.yaml#L233-L246).
      propeller:
        rawoutput-prefix: '{{ tpl .Values.metadataBucketPrefix $ }}'
        workers: 40
        max-workflow-retries: 50
        leader-election:
          enabled: false
        queue:
          type: batch
          batching-interval: 1s
          batch-size: -1
          queue:
            type: maxof
            base-delay: 0s
            max-delay: 60s
            rate: 1000
            capacity: 10000
          sub-queue:
            type: bucket
            rate: 1000
            capacity: 10000
        event-config:
          raw-output-policy: inline
        gc-interval: 12h
        kube-client-config:
          qps: 100
          burst: 25
          timeout: 30s
      webhook:
        certDir: /etc/webhook/certs
        serviceName: flyte-pod-webhook
      cache:
        max_size_mbs: 1024
        target_gc_percent: 70
      # -- For Workflow store use configuration [here](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/workflowstore#Config)
      #

    enabled_plugins:
      # -- Tasks specific configuration [structure](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/nodes/task/config#GetConfig)
      tasks:
        # -- Plugins configuration, [structure](https://pkg.go.dev/github.com/flyteorg/flytepropeller/pkg/controller/nodes/task/config#TaskPluginConfig)
        task-plugins:
          # -- [Enabled Plugins](https://pkg.go.dev/github.com/lyft/flyteplugins/go/tasks/config#Config). Enable sagemaker*, athena if you install the backend
          # plugins
          enabled-plugins:
            - container
            - sidecar
            - k8s-array
          default-for-task-types:
            container: container
            sidecar: sidecar
            container_array: k8s-array

    # -- Kubernetes specific Flyte configuration
    k8s:
      plugins:
        # -- Configuration section for all K8s specific plugins [Configuration structure](https://pkg.go.dev/github.com/lyft/flyteplugins/go/tasks/pluginmachinery/flytek8s/config)
        k8s:
          default-cpus: 100m
          default-memory: 100Mi

    # -- Logger configuration
    logger:
      logger:
        show-source: true
        level: 4

    # -- Resource manager configuration
    resource_manager:
      # -- resource manager configuration
      propeller:
        resourcemanager:
          type: noop

    # -- Section that configures how the Task logs are displayed on the UI. This has to be changed based on your actual logging provider.
    # Refer to [structure](https://pkg.go.dev/github.com/lyft/flyteplugins/go/tasks/logs#LogConfig) to understand how to configure various
    # logging engines
    task_logs:
      plugins:
        logs:
          kubernetes-enabled: true
          # -- One option is to enable cloudwatch logging for EKS, update the region and log group accordingly
          cloudwatch-enabled: false

  # --------------------------------------------------------
  # Optional Plugins
  # --------------------------------------------------------

  # -- Optional: Spark Plugin using the Spark Operator
  sparkoperator:
    # --- enable or disable Sparkoperator deployment installation
    enabled: false

    # -- Spark plugin configuration
    plugin_config:
      plugins:
        spark:
          # -- Spark default configuration
          spark-config-default:
            - spark.driver.cores: "1"
            - spark.executorEnv.HTTP2_DISABLE: "true"
            - spark.hadoop.fs.AbstractFileSystem.s3.impl: "org.apache.hadoop.fs.s3a.S3A"
            - spark.hadoop.fs.AbstractFileSystem.s3a.impl: "org.apache.hadoop.fs.s3a.S3A"
            - spark.hadoop.fs.AbstractFileSystem.s3n.impl: "org.apache.hadoop.fs.s3a.S3A"
            - spark.hadoop.fs.s3.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
            - spark.hadoop.fs.s3a.acl.default: "BucketOwnerFullControl"
            - spark.hadoop.fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
            - spark.hadoop.fs.s3n.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
            - spark.kubernetes.allocation.batch.size: "50"
            - spark.kubernetes.driverEnv.HTTP2_DISABLE: "true"
            - spark.network.timeout: 600s
            - spark.executorEnv.KUBERNETES_REQUEST_TIMEOUT: 100000
            - spark.executorEnv.AWS_METADATA_SERVICE_NUM_ATTEMPTS: 20
            - spark.executorEnv.AWS_METADATA_SERVICE_TIMEOUT: 5
            - spark.executor.heartbeatInterval: 60s
            - spark.hadoop.fs.s3a.aws.credentials.provider: com.amazonaws.auth.WebIdentityTokenCredentialsProvider

  common:
    ingress:
      enabled: false
  proxy:
    prof-port: 10254
    replicaCount: &minReplicaCount 2
    service:
      port: 8080
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: { }
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: "4"
        ephemeral-storage: 500Mi
        memory: "8Gi"
      requests:
        cpu: "1"
        ephemeral-storage: 100Mi
        memory: "500Mi"

    autoscaling:
      enabled: false
      minReplicas: *minReplicaCount
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

  # -----------------------------------------------------
  # Core dependencies that should be configured for Flyte to work on any platform
  # ------------------------------------------------------
  unionoperator:
    priorityClassName: "system-cluster-critical"
    replicaCount: &minReplicaCount 1

    image:
      repository: public.ecr.aws/p0i0a9q8/unionoperator
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 1e2ed4ffd25ec968b1288ec02e84b0d75742882a # UNION_OPERATOR_TAG

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: { }
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"

    podSecurityContext: { }
    #      fsGroup: 65534
    #      runAsUser: 1001
    #      fsGroupChangePolicy: "Always"

    securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: "4"
        ephemeral-storage: 500Mi
        memory: "8Gi"
      requests:
        cpu: "1"
        ephemeral-storage: 100Mi
        memory: "500Mi"

    autoscaling:
      enabled: false
      minReplicas: *minReplicaCount
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

    configmapOverrides: { }

  unionoperatorSparkHistoryServer:
    enabled: false
    replicaCount: &minReplicaCount 1

    image:
      repository: ghcr.io/flyteorg/flytecookbook
      tag: k8s_spark-a3b97943563cfc952b5683525763578685a93694
      pullPolicy: IfNotPresent

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: { }
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podSecurityContext: { }

    securityContext:
      allowPrivilegeEscalation: true
      runAsUser: 0

    service:
      type: ClusterIP
      port: 80

    resources:
      limits:
        cpu: "4"
        ephemeral-storage: 500Mi
        memory: "8Gi"
      requests:
        cpu: "1"
        ephemeral-storage: 100Mi
        memory: "500Mi"

    autoscaling:
      enabled: false
      minReplicas: *minReplicaCount
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }

    configmapOverrides: { }

  unionoperatorMonitoring:
    enabled: false
    prometheus:
      autoscaling:
        enabled: false

      replicaCount: 1

      externalUrl: /prometheus/

      storage:
        persistent: false
        className: gp2
        sizePerReplica: 1Gi
        retention:
          # size should strictly be less than the sizePerReplica in case of persistent, else less than ephemeral-storage
          size: 400MB

      resources:
        limits:
          cpu: "4"
          ephemeral-storage: 1Gi
          memory: "8Gi"
        requests:
          cpu: "1"
          ephemeral-storage: 500Mi
          memory: "500Mi"

      critical:
        enabled: true
        autoscaling:
          enabled: false

        replicaCount: 1

        externalUrl: /prometheus-crit/

        storage:
          persistent: false
          retention:
            # size should strictly be less than the sizePerReplica in case of persistent, else less than ephemeral-storage
            size: 200MB

        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 500Mi
            memory: "500Mi"
          requests:
            cpu: "1"
            ephemeral-storage: 500Mi
            memory: "500Mi"

      image:
        repository: prom/prometheus
        tag: v2.43.0
        pullPolicy: IfNotPresent

      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: { }
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""

      podSecurityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534

      securityContext:
        allowPrivilegeEscalation: false

      service:
        type: ClusterIP
        port: 80

    kubeStateMetrics:
      replicaCount: 1
      image:
        repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
        tag: v2.8.1
        pullPolicy: IfNotPresent

      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: { }
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""

      podSecurityContext: { }

      securityContext:
        allowPrivilegeEscalation: false

      service:
        type: ClusterIP
        port: 8080

      resources:
        limits:
          cpu: "4"
          ephemeral-storage: 500Mi
          memory: "8Gi"
        requests:
          cpu: "1"
          ephemeral-storage: 100Mi
          memory: "500Mi"

      autoscaling:
        enabled: false

    dcgmExporter:
      image:
        repository: nvcr.io/nvidia/k8s/dcgm-exporter
        tag: 3.1.7-3.1.4-ubuntu20.04
        pullPolicy: IfNotPresent

      arguments: ["-f", "/etc/dcgm-exporter/dcp-metrics-included.csv"]
      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: { }
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""

      podSecurityContext: { }

      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        privileged: true
        capabilities:
          add: [ "SYS_ADMIN" ]

      service:
        type: ClusterIP
        port: 9400
        address: ":9400"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ami_type
                operator: In
                values:
                - AL2_x86_64_GPU
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
        - effect: NoSchedule
          key: flyte.org/node-role
          operator: Exists
      resources:
        limits:
          cpu: 100m
          ephemeral-storage: 500Mi
          memory: 400Mi
        requests:
          cpu: 100m
          ephemeral-storage: 500Mi
          memory: 128Mi
      kubeletPath: "/var/lib/kubelet/pod-resources"
      extraHostVolumes:
        - name: nvidia-install-dir-host
          hostPath: /home/kubernetes/bin/nvidia
      extraVolumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia
          readOnly: true

    opencost:
      enabled: false
      scrape: false
    scrapeConfigs:
      kubeStateMetrics:
        extraMetricRelabelConfigs: []
    extraScrapeConfigs: []

opencost:
  # Values documented at https://github.com/opencost/opencost-helm-chart/tree/main/charts/opencost
  fullnameOverride: opencost
  opencost:
    # By default, disable prometheus. This runs opencost in exporter mode: https://www.opencost.io/docs/opencost-exporter
    # Set internal or external values to populate the PROMETHEUS_SERVER_ENDPOINT env var
    prometheus:
      external:
        enabled: false
      internal:
        enabled: false

    ui:
      enabled: false

minio:
  # -- Replicas count for Minio deployment
  replicaCount: 1
  image:
    # -- Docker image for Minio deployment
    repository: ecr.flyte.org/bitnami/minio
    # -- Docker image tag
    tag: 2021.10.13-debian-10-r0
    # -- Docker image pull policy
    pullPolicy: IfNotPresent
  # -- Default resources requests and limits for Minio deployment
  resources:
    # -- Requests are the minimum set of resources needed for this pod
    requests:
      cpu: 10m
      memory: 128Mi
    # -- Limits are the maximum set of resources needed for this pod
    limits:
      cpu: 200m
      memory: 512Mi
  # -- Service settings for Minio
  service:
    annotations: { }
    type: ClusterIP
  # -- Annotations for Minio pods
  podAnnotations: { }
  # -- nodeSelector for Minio deployment
  nodeSelector: { }
  # -- tolerations for Minio deployment
  tolerations: [ ]
  # -- affinity for Minio deployment
  affinity: { }
  persistence:
    enabled: false
    persistentVolumeClaimName: ""

#
# FLYTE_AGENT SETTINGS
#

flyteagent:
  enabled: false
  # -- Replicas count for flyteagent deployment
  replicaCount: 1
  image:
    # -- Docker image for flyteagent deployment
    repository: ghcr.io/flyteorg/flyteagent
    # -- Docker image tag
    tag: 1.6.2b1
    # -- Docker image pull policy
    pullPolicy: IfNotPresent
  ports:
    containerPort: 8000
    name: agent-grpc
  # -- Default resources requests and limits for flyteagent deployment
  resources:
    limits:
      cpu: 500m
      ephemeral-storage: 100Mi
      memory: 500Mi
    requests:
      cpu: 10m
      ephemeral-storage: 50Mi
      memory: 50Mi
  # -- Default regex string for searching configuration files
  configPath: /etc/flyteagent/config/*.yaml
  # -- Service settings for flyteagent
  service:
    type: ClusterIP
  # -- Configuration for service accounts for flyteagent
  serviceAccount:
    # -- Should a service account be created for flyteagent
    create: true
    # -- Annotations for ServiceAccount attached to flyteagent pods
    annotations: {}
    # -- ImagePullSecrets to automatically assign to the service account
    imagePullSecrets: []
  # -- Annotations for flyteagent pods
  podAnnotations: {}
  # -- nodeSelector for flyteagent deployment
  nodeSelector: {}
  # -- tolerations for flyteagent deployment
  tolerations: []
  # -- affinity for flyteagent deployment
  affinity: {}
  # -- Appends additional volumes to the deployment spec. May include template values.
  additionalVolumes: []
  # -- Appends additional volume mounts to the main container's spec. May include template values.
  additionalVolumeMounts: []
  # -- Appends additional containers to the deployment spec. May include template values.
  additionalContainers: []
  # -- Appends extra command line arguments to the main command
  extraArgs: {}
  # -- Sets priorityClassName for datacatalog pod(s).
  priorityClassName: ""
